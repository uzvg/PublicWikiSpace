created: 20241222045555012
description: 用一个形象又简单的例子来完全理解git的工作流程
modified: 20250716152840949
modifier: uzvg
progress: Completed
rating: Valuable
tags: Git PermanentNotes
title: 一个例子理解git工作流程
type: text/vnd.tiddlywiki
visibility: Public

!! 一、核心比喻：

学习 Git，我们可以把整个工作过程，想象成在一个安静的书房里写作：

* ''工作区（Working Directory）'' = ''书桌''
* ''暂存区（Staging Area）'' = ''书桌右上角的盒子''
* ''本地仓库（Local Repository）'' = ''书桌右手边的架子''
* ''远程仓库（Remote Repository）'' = ''图书馆的档案室''（比如 GitHub）

!! 二、具体流程：

!!! 1. 在书桌上写作（工作区）

你在书桌上修改稿件，添加段落、修改语法，这就像我们在 Git 中直接编辑文件。

状态：这些改动只是“临时修改”，Git 还没有记录。

!!! 2. 把满意的修改放入盒子（暂存区）

当你觉得某些改动已经准备好了，可以把它们放进书桌右上角的盒子中。这一步，就像运行命令：

```bash
git add <文件>
```

说明：这一步不会真正保存记录，但告诉 Git，“这些改动我已经准备好了，可以考虑入库”。

!!! 3. 给盒子贴上标签并放入架子（本地仓库）

修改到一定阶段，比如写完了一章，或者功能开发完成，就可以把盒子贴上标签，放入书桌右边的档案架上。这一步就像运行：

```bash
git commit -m "完成了第1章初稿"
```

本质上就是“保存一次快照”，记录下这批改动的状态和描述。

!!! 4. 把盒子送去图书馆（远程仓库）

有时候你想要备份写作成果，或者和同事共享稿件，这时你可以把架子上的盒子搬到图书馆（GitHub 等远程仓库），命令是：

```bash
git push origin main
```

就像“发布版本”，让其他人能看到你的修改。

!! 补充说明：

!!! `.gitignore`：书桌上的“忽略清单”

有些纸张是草稿、便条，或者你不希望 Git 管理的文件（比如缓存、临时文件），你可以在书桌上贴一张“忽略清单”，告诉 Git：

> “这些纸张别放进盒子，永远忽略。”

对应 Git 中的 `.gitignore` 文件。

!!! 修改后反悔怎么办？

* 如果你不小心放错了文件进盒子，可以用 `git reset` 把它拿出来。
* 如果你连书桌上的改动也想撤销，可以用 `git checkout` 恢复它。

!! 三、常用命令总结

|!操作|!命令|!比喻|
|查看状态    |`git status`           |看看书桌和盒子里都有哪些稿件 |
|添加到暂存区  |`git add <文件>`         |放入盒子           |
|提交到本地仓库 |`git commit -m "<说明>"` |给盒子贴标签并存入档案架   |
|查看提交历史  |`git log`              |查看以前放进架子的盒子    |
|推送到远程仓库 |`git push origin main` |把盒子送去图书馆       |
|忽略某些文件  |编辑 `.gitignore`        |写一张“不要放进盒子”的清单 |